--- code/cgram
+++ SHRDLU/CGRAM
@@ -1,16 +1,16 @@
 (declare (genprefix cgram))
 
-################################################################
-
-		CGRAM >
-
-    the regular grammar after going through the precompiler
-################################################################
+;;;################################################################
+;;;
+;;;		CGRAM >
+;;;
+;;;    the regular grammar after going through the precompiler
+;;;################################################################
 
 
 
 (DEFUN CLAUSE NIL 
-       (PROG (FE H ME NB C SM CUT NN T1 T2 T3 :RESULT POSITION-OF-PRTMVB LOCATIONMARKER
+       (PROG (FE H ME NB C SM CUT NN T1 T2 T3 :RESULT POSITION-OF-PRT MVB LOCATIONMARKER
 	      SUBJ-VB-BACKUP-TYPE1 POSITION-OF-PTW) 
 	     (SETQ NN T)
 	     (SETQ CUT END)
@@ -555,6 +555,7 @@
 	     (SETR 'PARENT PARENT C)
 	ENTERING-NG
 	     (AND LABELTRACE (PASSING 'ENTERING-NG))
+	     (SETQ T2 0)
 	NGSTART
 	     (AND LABELTRACE (PASSING 'NGSTART))
 	     (COND ((CQ RELWD) (GO RELWD))
@@ -733,6 +734,9 @@
 	CLASF(AND LABELTRACE (PASSING 'CLASF))
 	     (SETQ :RESULT (OR (PARSE VB ING (CLASF)) (PARSE VB EN (CLASF)) (PARSE CLASF)))
 	     (COND (:RESULT (COND ((NULL NN) (GO REDUC)) (T (GO CLASF)))))
+	     (SETQ T2 (1+ T2))
+	     (AND (GREATERP T2 0100)
+	          (GO FAIL))
 	NOUN (AND LABELTRACE (PASSING 'NOUN))
 	     (SETQ :RESULT (PARSE NOUN))
 	     (COND ((NULL :RESULT) (GO RED2)))
@@ -1322,7 +1326,7 @@
 
 
 (DEFUN COMMA NIL 
-       (COND ((SECONDWORD? '") (FLUSHME) T) ((CONJ)) ((ISQ RE INIT) (FLUSHME) T)))
+       (COND ((SECONDWORD? '\") (FLUSHME) T) ((CONJ)) ((ISQ RE INIT) (FLUSHME) T)))
 
 
 (DEFUN CONJOIN NIL 
@@ -1340,7 +1344,7 @@
 	UP   (AND LABELTRACE (PASSING 'UP))
 	     (SETQ PREV (NEXTWORD))
 	     (FLUSHME)
-	     (COND ((AND (EQ PREV '/,)
+	     (COND ((AND (EQ PREV '\,)
 			 (OR (CDR H) (GREATERP (DIFFERENCE (LENGTH (NB H)) (LENGTH (N H))) 4))
 			 (MEMQ (NEXTWORD) '(OR AND NOR BUT))
 			 (F (NEXTWORD)))
@@ -1367,7 +1371,7 @@
 	     (COND ((NULL :RESULT) (GO LOSE2)))
 	     (CUT END)
 	     (COND ((NOT (ATOM PREV)) (GO RETSM))
-		   ((EQ PREV '/,)
+		   ((EQ PREV '\,)
 		    (COND ((NEXTWORD? COMMA) (FQ LIST) (GO UP)) (T (GO LIST))))
 		   ((MEMQ PREV '(AND OR NOR BUT))
 		    (COND ((EQ BOTH (NB H)) (FQ BOTH)))
@@ -1382,7 +1386,7 @@
 	     (SETQ :RESULT (CQ LISTA))
 	     (COND (:RESULT (GO LISTA)))
 	LIST (AND LABELTRACE (PASSING 'LIST))
-	     (SETQ :RESULT (AND (EQ PREV '/,)
+	     (SETQ :RESULT (AND (EQ PREV '\,)
 				(EQUAL (LENGTH H) 2)
 				(ISQ H NG)
 				(NOT (OR (ISQ H PRONG) (ISQ (CDR H) PRONG)))
@@ -1447,8 +1451,8 @@
 						     ((MEMQ 'REPORT TYPE)
 						      '(R E P)))
 					       '(O B)
-					       (LIST (COND ((EQ NUM 1) '/1)
-							   (T '/2)))))
+					       (LIST (COND ((EQ NUM 1) '\1)
+							   (T '\2)))))
 			     VBFEAT))
 			   ((MEMQ 'COMP TYPE) (MEMQ 'INT VBFEAT))
 			   ((MEMQ 'NG TYPE)
@@ -1482,5 +1486,5 @@
 		  (OR (NULL FEATURE) (F FEATURE))
 		  (RETURN T))))
 
-REMEMBER/ TO/ UFILE 
+'REMEMBER\ TO\ UFILE
 
\ No newline at end of file
